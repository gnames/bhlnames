package db

import (
	"database/sql"
)

// Item is a physical entity digitized and aggregated by Internet Archive and
// BHL. It can be a volume of a journal, a book etc.
type Item struct {
	// ID is the identifier autogenerated by BHL database.
	ID uint `gorm:"primary_key;auto_increment:false"`

	// Identifier generated by Internet Archive for the Item.
	BarCode string `gorm:"type:varchar(100);unique_index;not null"`

	// Vol contains not normalized volume field from BHl database.
	Vol string `gorm:"type:varchar(100)"`

	// YearStart contains the earliest year of publication. For journal volume
	// it would be a publication of the first journal issue, for a book it
	// would be the date of publication.
	YearStart sql.NullInt32

	// YearEnd contains the latest year of publication. The field is often
	// empty, if the Item was published at once.
	YearEnd sql.NullInt32

	// TitleID contains automatically generated id for the parent title of the
	// item.
	TitleID uint `gorm:"not null"`

	// TitleDOI is the DOI of an item.
	TitleDOI string `gorm:"type:varchar(100)"`

	// TitleName is the name of a journal or a book.
	TitleName string `gorm:"type:varchar(255)"`

	// TitleAbbr1 is an acronym of a title where the first letter of each
	// word is used.
	TitleAbbr1 string `gorm:"type:varchar(10)"`

	// TitleAbbr2 is an acronym of a title where 'common' words like 'and'
	// 'the' etc. are ommitted.
	TitleAbbr2 string `gorm:"type:varchar(10)"`

	// TitleYearStart the first year when a title was published.
	TitleYearStart sql.NullInt32

	// TitleYearEnd is the last year when a title was published.
	TitleYearEnd sql.NullInt32

	// TitleLang is the most prevalent language of a title.
	TitleLang string `gorm:"type:varchar(20)"`

	// PathsTotal is the number of name classifications registered in the
	// item.
	PathsTotal uint

	// Number of unique names in the item associated with Animalia by
	// the Catalogue of Life.
	AnimaliaNum uint

	// Number of unique names in the item associated with Plantae by
	// the Catalogue of Life.
	PlantaeNum uint

	// Number of unique names in the item associated with Fungi by
	// the Catalogue of Life.
	FungiNum uint

	// Number of unique names in the item associated with Bacteria by
	// the Catalogue of Life.
	BacteriaNum uint

	// The kingom that contains most of the taxa in the item.
	MajorKingdom string `gorm:"type:varchar(100)"`

	// The percentage of taxa associated with the major kingdom.
	KingdomPercent uint

	// MainTaxon is the taxon containing more that 50% of all taxa in the item.
	MainTaxon string `gorm:"type:varchar(100)"`
}

// Page contains metadata about a page file from BHL archive.
type Page struct {
	// ID is the identifier autogenerated by BHL database.
	ID uint `gorm:"primary_key;auto_increment:false"`

	// ItemID is automatically generated identifier from BHL database.
	// It corresponds to ID field in Item.
	ItemID uint `gorm:"index:item;not null"`

	// SequenceOrder corresponds to ordered position of a page in an item.
	// For example a an item page that is preceded by 4 other pages should
	// have SequenceOrder 5.
	SequenceOrder uint `gorm:"not null"`

	// PageNum corresponds to the page number/label assigned by the publisher
	// of the item.
	PageNum sql.NullInt64
}

type Part struct {
	ID                 uint `gorm:"primary_key;auto_increment:false"`
	PageID             sql.NullInt32
	ItemID             sql.NullInt32
	Length             sql.NullInt32
	DOI                string `gorm:"type:varchar(100)"`
	ContributorName    string `gorm:"type:varchar(255)"`
	SequenceOrder      sql.NullInt32
	SegmentType        string        `gorm:"type:varchar(100)"`
	Title              string        `gorm:"type:text"`
	ContainerTitle     string        `gorm:"type:text"`
	PublicationDetails string        `gorm:"type:text"`
	Volume             string        `gorm:"type:varchar(100)"`
	Series             string        `gorm:"type:varchar(100)"`
	Issue              string        `gorm:"type:varchar(100)"`
	Date               string        `gorm:"type:varchar(100)"`
	Year               sql.NullInt32 `gorm:"index:year"`
	YearEnd            sql.NullInt32
	Month              sql.NullInt32
	Day                sql.NullInt32
	PageNumStart       sql.NullInt32
	PageNumEnd         sql.NullInt32
	Language           string `gorm:"type:varchar(20)"`
}

// NameString is a unique normalize name-string that had been matched,
// at least partially to the Catalogue of Life.
type NameString struct {
	// ID is UUID v5 generated from the Name field. There is always
	// 1:1 relationship between Name and ID.
	ID string `sql:"type:uuid;primary_key"`

	// Name is the normalized version of detected in BHL name.
	Name string `gorm:"type:varchar(255)"`

	// RecordID is the Catalogue of Life identifier of a matched taxon.
	RecordID string `gorm:"type:varchar(100)"`

	// MatchType describes a resulting kind of a name-string match.
	// The following match types are possible:
	//
	// NoMatch - GNverifier did not find a match for the name-string.
	// Exact - Canonical form of a name matched exactly
	// PartialExact - Canonical form matched exactly after removal of some words.
	// Fuzzy - Canonical form matched, but with some differences.
	// PartialFuzzy - Canonical form matched with differences after removal of some words.
	// Virus - Name-string matched as a virus name.
	MatchType string `gorm:"type:varchar(100)"`

	// EditDistance shows how much difference exists between name-string and a
	// match according to Levenshtein algorithm.
	EditDistance uint

	// StemEditDistance shows how much difference exists between name-string and
	// a match according to Levenshtein algorithm.
	StemEditDistance uint

	// MatchedName provides the complete complete name-string.
	MatchedName string `gorm:"type:varchar(255)"`

	// MatchedCanonical provides canonical form of the matched name-string.
	MatchedCanonical string `gorm:"type:varchar(255);index:canonical"`

	// CurrentName is the full currently accepted name of the match
	// provided by the DataSource.
	CurrentName string `gorm:"type:varchar(255)"`

	// CurrentCanonical is a canonical form of the currently accepted name of
	// the match.
	CurrentCanonical string `gorm:"type:varchar(255);index:current_canonical"`

	// Classification contains a classification to the name provided by the
	// Catalogue of Life.
	Classification string

	// DataSourceID is the ID of the data-source according to GNverifier.
	// The mapping of IDs to data-sources can be found at
	// https://verifier.globalnames.org/data_sources
	// site. In this case it should always be 1.
	DataSourceId sql.NullInt32

	// DataSourceTitle provides a title of the data-source that matched the
	// name-string. In this case it should always be `The Catalogue of Life`.
	DataSourceTitle string `gorm:"type:varchar(255)"`

	// DataSourcesNumber is the number of dataSources that matched the name.
	DataSourcesNumber uint

	// Curation provides information about a level of curation according to
	// GNverifier. The following categories are supported:
	//
	// NotCurated -- None of data-sources that matched a name-string are marked as curated.
	// Curated -- Some data-sources with a match are marked as curated.
	// AutoCurated -- Some data-sources have automatic quality control, but not much human curation.
	Curation bool `gorm:"index:curation"`

	// Occurrences is the number of times this name appeared in BHL texts.
	Occurences uint

	// OddsLog10 is a logarithm with base 10 of odds that a detected string is
	// actually a scientific name according to a Naive Bayes algorithm.
	OddsLog10 float32

	// Error contains error that happened during verification. If this field
	// is empty then verification was completed successfully for the name-string.
	Error string `gorm:"type:varchar(255)"`
}

// NameOccurrence is the occurrence of a name-string in BHL.
type NameOccurrence struct {
	// PageID corresponds to ID field in Page. It is a number automatically
	// generated by BHL database.
	PageID uint

	// NameStringID corresponds to ID field in NameString.
	// It is UUID v5 generated from the normalized version of
	// a detected name.
	NameStringID string `sql:"type:uuid;index:name_string"`

	// OffsetStart is the starting position of a detected name on the page.
	// It is calculated using UTF-8 characters.
	OffsetStart uint

	// OffsetEnd is the ending position of a detected name on the page.
	// It is calculated using UTF-8 characters.
	OffsetEnd uint

	// OddsLog10 is a logarithm with base 10 of odds that a detected string is
	// actually a scientific name according to a Naive Bayes algorithm.
	OddsLog10 float64

	// NomenAnnot is a normalized nomenclatural annotation detected in a vicinity
	// of the occurrence. Examples of annotations are `NO_ANNOT`, `SP_NOV` etc.
	NomenAnnot string `gorm:"type:varchar(50);index:annot"`
}
